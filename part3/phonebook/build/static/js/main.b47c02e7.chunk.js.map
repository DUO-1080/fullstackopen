{"version":3,"sources":["services/phoneService.js","components/Filter.jsx","components/PersonForm.jsx","components/Persons.jsx","components/Message.jsx","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","person","post","id","url","delete","put","newPerson","persons","find","name","Filter","onFilter","type","onChange","e","target","value","PersonForm","onAddPerson","useState","setName","number","setNumber","onSubmit","preventDefault","htmlFor","Persons","onDeletePerson","map","key","onClick","Message","message","className","success","info","App","setPersons","filterName","setFilterName","setMessage","useEffect","phoneService","filteredPerson","filter","toLowerCase","includes","personInServer","window","confirm","console","log","p","catch","error","setTimeout","concat","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b47c02e7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst addPerson = (person) => {\n  return axios.post(baseUrl, person).then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const url = `${baseUrl}/${id}`;\n  return axios.delete(url);\n};\n\nconst update = (id, person) => {\n  const url = `${baseUrl}/${id}`;\n  return axios.put(url, person).then((response) => response.data);\n};\n\nconst personInServer = (newPerson) =>\n  getAll().then((persons) =>\n    persons.find((person) => person.name === newPerson.name)\n  );\n\nexport default { getAll, addPerson, remove, update, personInServer };\n","import React from \"react\";\n\nconst Filter = ({ onFilter }) => {\n\n  const handleInputChange = (e) => {\n    onFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <p>filter show with: </p>\n      <input type=\"text\" onChange={handleInputChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from \"react\";\n\nconst PersonForm = ({ onAddPerson }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddPerson({\n      name,\n      number,\n    });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">number</label>\n        <input\n          type=\"number\"\n          id=\"number\"\n          value={number}\n          onChange={(e) => setNumber(e.target.value)}\n        />\n      </div>\n      <input type=\"submit\" value=\"add\" />\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, onDeletePerson }) => {\n  return (\n    <>\n      {persons.map((person) => (\n        <p key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => onDeletePerson(person.id)}>delete</button>\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = ({ message }) => {\n  return (\n    <div className={message.success ? \"success message\" : \"fail message\"}>\n      {message.info}\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport phoneService from \"./services/phoneService\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Message from \"./components/Message\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    phoneService.getAll().then((persons) => setPersons(persons));\n  }, []);\n\n  const handleFilter = (name) => {\n    setFilterName(name.toLowerCase());\n  };\n\n  const handleAddPerson = (person) => {\n    phoneService.personInServer(person).then((personInServer) => {\n      if (personInServer) {\n        window.confirm(\n          `${person.name} is already added to phonebook, replace the old number with the new one?`\n        ) &&\n          phoneService\n            .update(personInServer.id, person)\n            .then((person) => {\n              console.log(\"update new person: \", person);\n              setPersons(persons.map((p) => (p.id === person.id ? person : p)));\n            })\n            .catch((error) => {\n              console.log(\"update person error: \", error.response.data);\n              setMessage({ success: false, info: error.response.data.error });\n              setTimeout(() => {\n                setMessage(null);\n              }, 2000);\n            });\n      } else {\n        phoneService\n          .addPerson(person)\n          .then((person) => {\n            setPersons(persons.concat(person));\n            setMessage({ success: true, info: `Add ${person.name}` });\n            setTimeout(() => {\n              setMessage(null);\n            }, 2000);\n          })\n          .catch((error) => {\n            console.log(\"add new person error: \", error.response.data);\n            setMessage({ success: false, info: error.response.data.error });\n            setTimeout(() => {\n              setMessage(null);\n            }, 2000);\n          });\n      }\n    });\n  };\n\n  const handleDeletePerson = (id) => {\n    const person = persons.find((person) => person.id === id);\n    window.confirm(`Delete ${person.name}`) &&\n      phoneService\n        .remove(id)\n        .then(() => setPersons(persons.filter((person) => person.id !== id)))\n        .catch((err) => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setMessage({\n            success: false,\n            info: `Information of ${person.name} has already been removed from server.`,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 1000);\n          console.log(\"cannot able to delete \" + person.name, err);\n        });\n  };\n\n  const filteredPerson = filterName\n    ? persons.filter((person) => person.name.toLowerCase().includes(filterName))\n    : persons;\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      {message && <Message message={message} />}\n      <Filter onFilter={handleFilter} />\n      <h3>Add a new</h3>\n      <PersonForm onAddPerson={handleAddPerson} />\n      <h3>Numbers</h3>\n      <Persons persons={filteredPerson} onDeletePerson={handleDeletePerson} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}